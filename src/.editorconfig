root = true

## Global ##
[*]
charset = utf-8
end_of_line = crlf
insert_final_newline = true
trim_trailing_whitespace = true


## Indentation and Spacing ##
[*]
indent_size = 4
indent_style = space
tab_width = 4

[*.cs]
indent_size = 4
indent_style = space
tab_width = 4

[*.{csproj,xml}]
indent_size = 2
indent_style = space
tab_width = 2


## CSharp ##
[*.cs]

# Code Style | General | 'this.' preferences
dotnet_style_qualification_for_event = false:warning
dotnet_style_qualification_for_field = false:warning
dotnet_style_qualification_for_method = false:warning
dotnet_style_qualification_for_property = false:warning

# Code Style | General | Predefined type preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning

# Code Style | General | 'var' preferences
csharp_style_var_elsewhere = true:suggestion
csharp_style_var_for_built_in_types = false:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion

# Code Style | General | Code block preferences
csharp_prefer_braces = true:warning
csharp_style_namespace_declarations = file_scoped:suggestion
csharp_prefer_simple_using_statement = true:suggestion
dotnet_style_prefer_auto_properties = true:silent

# Code Style | General | Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:warning

# Code Style | General | Expression preferences
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:warning
csharp_style_prefer_switch_expression = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = false:silent
dotnet_style_explicit_tuple_names = true:suggestion
csharp_prefer_simple_default_expression = true:warning
dotnet_style_prefer_inferred_tuple_names = false:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = false:suggestion
csharp_style_pattern_local_over_anonymous_function = true:warning
dotnet_style_prefer_compound_assignment = true:warning
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_prefer_tuple_swap = true:suggestion
csharp_style_unused_value_assignment_preference = discard_variable:suggestion
csharp_style_unused_value_expression_statement_preference = discard_variable:suggestion

# Code Style | General | Expression-bodied members
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_properties = true:suggestion
csharp_style_expression_bodied_indexers = true:suggestion
csharp_style_expression_bodied_accessors = true:suggestion
csharp_style_expression_bodied_lambdas = true:suggestion
csharp_style_expression_bodied_local_functions = false:suggestion

# Code Style | General | Pattern matching preferences
csharp_style_prefer_pattern_matching = true:suggestion
csharp_style_pattern_matching_over_is_with_cast_check = true:warning
csharp_style_pattern_matching_over_as_with_null_check = true:warning
csharp_style_prefer_not_pattern = true:suggestion

# Code Style | General | Variable preferences
csharp_style_inlined_variable_declaration = true:warning
csharp_style_deconstructed_variable_declaration = true:suggestion

# Code Style | General | 'null' checking
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion
dotnet_style_coalesce_expression = true:warning
dotnet_style_null_propagation = true:warning
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning
csharp_style_prefer_null_check_over_type_check = true:suggestion

# Code Style | General | 'using' preferences
csharp_using_directive_placement = outside_namespace:error

# Code Style | General | Modifier preferences
dotnet_style_readonly_field = true:warning
csharp_prefer_static_local_function = true:warning

# Code Style | General | Parameter preferences
dotnet_code_quality_unused_parameters = non_public:warning

# Code Style | General | New line preferences
dotnet_style_allow_multiple_blank_lines_experimental = false:warning
csharp_style_allow_embedded_statements_on_same_line_experimental = false:warning
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = false:warning
dotnet_style_allow_statement_immediately_after_block_experimental = false:warning
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = false:warning

# Code Style | Formatting | General

# Code Style | Formatting | Indentation | General
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = false
csharp_indent_switch_labels = true

# Code Style | Formatting | Indentation | Label Indentation
csharp_indent_labels = one_less_than_current

# Code Style | Formatting | New Lines | New line options for braces
csharp_new_line_before_open_brace = all

# Code Style | Formatting | New Lines | New line options for keywords
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true

# Code Style | Formatting | New Lines | New line options for expressions
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Code Style | Formatting | Spacing | Set spacing for method declarations
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false

# Code Style | Formatting | Spacing | Set spacing for method calls
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false

# Code Style | Formatting | Spacing | Set other spacing options
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_parentheses = false
csharp_space_after_cast = false
csharp_space_around_declaration_statements = false

# Code Style | Formatting | Spacing | Set spacing for brackets
csharp_space_before_open_square_brackets = false
csharp_space_between_square_brackets = false
csharp_space_between_empty_square_brackets = false

# Code Style | Formatting | Spacing | Set spacing for delimiters
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_after_comma = true
csharp_space_before_dot = false
csharp_space_after_dot = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_after_semicolon_in_for_statement = true

# Code Style | Formatting | Spacing | Set spacing for operators
csharp_space_around_binary_operators = before_and_after

# Code Style | Formatting | Wrapping
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = false

# Advanced | Using directives
dotnet_sort_system_directives_first = false
dotnet_separate_import_directive_groups = false

# Code Style | Naming | Rules | Interface should begin with I
dotnet_naming_rule.interface_should_be_begins_with_i.severity = warning
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

# Code Style | Naming | Rules | Generic Parameter should begin with T
dotnet_naming_rule.generic_parameter_should_be_begins_with_t.severity = warning
dotnet_naming_rule.generic_parameter_should_be_begins_with_t.symbols = generic_parameter
dotnet_naming_rule.generic_parameter_should_be_begins_with_t.style = begins_with_t

# Code Style | Naming | Rules | Private Field should begin with Underscore
#dotnet_naming_rule.field_private_should_be_begins_with_underscore.severity = warning
#dotnet_naming_rule.field_private_should_be_begins_with_underscore.symbols = field_private
#dotnet_naming_rule.field_private_should_be_begins_with_underscore.style = begins_with_underscore

# Code Style | Naming | Rules | Async Method should end in Async
dotnet_naming_rule.method_async_should_be_ends_with_async.severity = warning
dotnet_naming_rule.method_async_should_be_ends_with_async.symbols = method_async
dotnet_naming_rule.method_async_should_be_ends_with_async.style = ends_with_async

# Code Style | Naming | Rules | Async Local Function should end in Async
dotnet_naming_rule.local_function_async_should_be_ends_with_async.severity = warning
dotnet_naming_rule.local_function_async_should_be_ends_with_async.symbols = local_function_async
dotnet_naming_rule.local_function_async_should_be_ends_with_async.style = ends_with_async

# Code Style | Naming | Rules | Class should be PascalCase
dotnet_naming_rule.class_should_be_pascal_case.severity = warning
dotnet_naming_rule.class_should_be_pascal_case.symbols = class
dotnet_naming_rule.class_should_be_pascal_case.style = pascal_case

# Code Style | Naming | Rules | Struct should be PascalCase
dotnet_naming_rule.struct_should_be_pascal_case.severity = warning
dotnet_naming_rule.struct_should_be_pascal_case.symbols = struct
dotnet_naming_rule.struct_should_be_pascal_case.style = pascal_case

# Code Style | Naming | Rules | Enum should be PascalCase
dotnet_naming_rule.enum_should_be_pascal_case.severity = warning
dotnet_naming_rule.enum_should_be_pascal_case.symbols = enum
dotnet_naming_rule.enum_should_be_pascal_case.style = pascal_case

# Code Style | Naming | Rules | Type should be PascalCase
dotnet_naming_rule.type_should_be_pascal_case.severity = warning
dotnet_naming_rule.type_should_be_pascal_case.symbols = type
dotnet_naming_rule.type_should_be_pascal_case.style = pascal_case

# Code Style | Naming | Rules | Method should be PascalCase
dotnet_naming_rule.method_should_be_pascal_case.severity = warning
dotnet_naming_rule.method_should_be_pascal_case.symbols = method
dotnet_naming_rule.method_should_be_pascal_case.style = pascal_case

# Code Style | Naming | Rules | Local Function should be PascalCase
dotnet_naming_rule.local_function_should_be_pascal_case.severity = warning
dotnet_naming_rule.local_function_should_be_pascal_case.symbols = local_function
dotnet_naming_rule.local_function_should_be_pascal_case.style = pascal_case

# Code Style | Naming | Rules | Property should be PascalCase
dotnet_naming_rule.property_should_be_pascal_case.severity = warning
dotnet_naming_rule.property_should_be_pascal_case.symbols = property
dotnet_naming_rule.property_should_be_pascal_case.style = pascal_case

# Code Style | Naming | Rules | Event should be PascalCase
dotnet_naming_rule.event_should_be_pascal_case.severity = warning
dotnet_naming_rule.event_should_be_pascal_case.symbols = event
dotnet_naming_rule.event_should_be_pascal_case.style = pascal_case

# Code Style | Naming | Rules | Delegate should be PascalCase
dotnet_naming_rule.delegate_should_be_pascal_case.severity = warning
dotnet_naming_rule.delegate_should_be_pascal_case.symbols = delegate
dotnet_naming_rule.delegate_should_be_pascal_case.style = pascal_case

# Code Style | Naming | Rules | Const field should be PascalCase
dotnet_naming_rule.const_field_should_be_pascal_case.severity = warning
dotnet_naming_rule.const_field_should_be_pascal_case.symbols = const_field
dotnet_naming_rule.const_field_should_be_pascal_case.style = pascal_case

# Code Style | Naming | Rules | Const local should be PascalCase
dotnet_naming_rule.const_local_should_be_pascal_case.severity = warning
dotnet_naming_rule.const_local_should_be_pascal_case.symbols = const_local
dotnet_naming_rule.const_local_should_be_pascal_case.style = pascal_case

# Code Style | Naming | Rules | Const should be PascalCase
dotnet_naming_rule.const_should_be_pascal_case.severity = warning
dotnet_naming_rule.const_should_be_pascal_case.symbols = const
dotnet_naming_rule.const_should_be_pascal_case.style = pascal_case

# Code Style | Naming | Rules | Field should be camelCase
dotnet_naming_rule.field_should_be_camel_case.severity = warning
dotnet_naming_rule.field_should_be_camel_case.symbols = field
dotnet_naming_rule.field_should_be_camel_case.style = camel_case

# Code Style | Naming | Rules | Parameter should be camelCase
dotnet_naming_rule.parameter_should_be_camel_case.severity = warning
dotnet_naming_rule.parameter_should_be_camel_case.symbols = parameter
dotnet_naming_rule.parameter_should_be_camel_case.style = camel_case

# Code Style | Naming | Rules | Variable should be camelCase
dotnet_naming_rule.variable_should_be_camel_case.severity = warning
dotnet_naming_rule.variable_should_be_camel_case.symbols = variable
dotnet_naming_rule.variable_should_be_camel_case.style = camel_case

# Code Style | Naming | Specifications | Interface
dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers = 

# Code Style | Naming | Specifications | Class
dotnet_naming_symbols.class.applicable_kinds = class
dotnet_naming_symbols.class.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.class.required_modifiers = 

# Code Style | Naming | Specifications | Struct
dotnet_naming_symbols.struct.applicable_kinds = struct
dotnet_naming_symbols.struct.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.struct.required_modifiers = 

# Code Style | Naming | Specifications | Enum
dotnet_naming_symbols.enum.applicable_kinds = enum
dotnet_naming_symbols.enum.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.enum.required_modifiers = 

# Code Style | Naming | Specifications | Type (Interface, Class, Struct, Enum)
dotnet_naming_symbols.type.applicable_kinds = interface, class, struct, enum
dotnet_naming_symbols.type.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.type.required_modifiers = 

# Code Style | Naming | Specifications | Method
dotnet_naming_symbols.method.applicable_kinds = method
dotnet_naming_symbols.method.applicable_accessibilities = *
dotnet_naming_symbols.method.required_modifiers = 

# Code Style | Naming | Specifications | Method | Async
dotnet_naming_symbols.method_async.applicable_kinds = method
dotnet_naming_symbols.method_async.applicable_accessibilities = *
dotnet_naming_symbols.method_async.required_modifiers = async

# Code Style | Naming | Specifications | Local Function
dotnet_naming_symbols.local_function.applicable_kinds = local_function
dotnet_naming_symbols.local_function.applicable_accessibilities = local
dotnet_naming_symbols.local_function.required_modifiers = 

# Code Style | Naming | Specifications | Local Function | Async
dotnet_naming_symbols.local_function_async.applicable_kinds = local_function
dotnet_naming_symbols.local_function_async.applicable_accessibilities = local
dotnet_naming_symbols.local_function_async.required_modifiers = async

# Code Style | Naming | Specifications | Property
dotnet_naming_symbols.property.applicable_kinds = property
dotnet_naming_symbols.property.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.property.required_modifiers = 

# Code Style | Naming | Specifications | Event
dotnet_naming_symbols.event.applicable_kinds = event
dotnet_naming_symbols.event.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.event.required_modifiers = 

# Code Style | Naming | Specifications | Delegate
dotnet_naming_symbols.delegate.applicable_kinds = delegate
dotnet_naming_symbols.delegate.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.delegate.required_modifiers = 

# Code Style | Naming | Specifications | Field
dotnet_naming_symbols.field.applicable_kinds = field
dotnet_naming_symbols.field.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.field.required_modifiers = 

# Code Style | Naming | Specifications | Field | Private
dotnet_naming_symbols.field_private.applicable_kinds = field
dotnet_naming_symbols.field_private.applicable_accessibilities = private, private_protected
dotnet_naming_symbols.field_private.required_modifiers = 

# Code Style | Naming | Specifications | Parameter
dotnet_naming_symbols.parameter.applicable_kinds = parameter
dotnet_naming_symbols.parameter.applicable_accessibilities = *
dotnet_naming_symbols.parameter.required_modifiers = 

# Code Style | Naming | Specifications | Variable
dotnet_naming_symbols.variable.applicable_kinds = local
dotnet_naming_symbols.variable.applicable_accessibilities = local
dotnet_naming_symbols.variable.required_modifiers = 

# Code Style | Naming | Specifications | Const
dotnet_naming_symbols.const.applicable_kinds = *
dotnet_naming_symbols.const.applicable_accessibilities = *
dotnet_naming_symbols.const.required_modifiers = const

# Code Style | Naming | Specifications | Const | Field
dotnet_naming_symbols.const_field.applicable_kinds = field
dotnet_naming_symbols.const_field.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.const_field.required_modifiers = const

# Code Style | Naming | Specifications | Const | Local
dotnet_naming_symbols.const_local.applicable_kinds = local
dotnet_naming_symbols.const_local.applicable_accessibilities = local
dotnet_naming_symbols.const_local.required_modifiers = const

# Code Style | Naming | Specifications | Generic Parameter
dotnet_naming_symbols.generic_parameter.applicable_kinds = type_parameter
dotnet_naming_symbols.generic_parameter.applicable_accessibilities = *
dotnet_naming_symbols.generic_parameter.required_modifiers = 

# Code Style | Naming | Styles | Pascal Case
dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case

# Code Style | Naming | Styles | Camel Case
dotnet_naming_style.camel_case.required_prefix = 
dotnet_naming_style.camel_case.required_suffix = 
dotnet_naming_style.camel_case.word_separator = 
dotnet_naming_style.camel_case.capitalization = camel_case

# Code Style | Naming | Styles | Begins with I
dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix = 
dotnet_naming_style.begins_with_i.word_separator = 
dotnet_naming_style.begins_with_i.capitalization = pascal_case

# Code Style | Naming | Styles | Begins with T
dotnet_naming_style.begins_with_t.required_prefix = T
dotnet_naming_style.begins_with_t.required_suffix = 
dotnet_naming_style.begins_with_t.word_separator = 
dotnet_naming_style.begins_with_t.capitalization = pascal_case

# Code Style | Naming | Styles | Begins with Underscore
dotnet_naming_style.begins_with_underscore.required_prefix = _
dotnet_naming_style.begins_with_underscore.required_suffix = 
dotnet_naming_style.begins_with_underscore.word_separator = 
dotnet_naming_style.begins_with_underscore.capitalization = camel_case

# Code Style | Naming | Styles | Ends with Async
dotnet_naming_style.ends_with_async.required_prefix = 
dotnet_naming_style.ends_with_async.required_suffix = Async
dotnet_naming_style.ends_with_async.word_separator = 
dotnet_naming_style.ends_with_async.capitalization = pascal_case

# Microsoft.CodeAnalysis.NetAnalyzers | Design
dotnet_diagnostic.CA1000.severity = warning
dotnet_diagnostic.CA1001.severity = warning
dotnet_diagnostic.CA1002.severity = warning
dotnet_diagnostic.CA1003.severity = none
dotnet_diagnostic.CA1005.severity = warning
dotnet_diagnostic.CA1008.severity = warning
dotnet_diagnostic.CA1010.severity = suggestion
dotnet_diagnostic.CA1012.severity = warning
dotnet_diagnostic.CA1014.severity = none
dotnet_diagnostic.CA1016.severity = none
dotnet_diagnostic.CA1017.severity = none
dotnet_diagnostic.CA1018.severity = warning
dotnet_diagnostic.CA1019.severity = suggestion
dotnet_diagnostic.CA1021.severity = suggestion
dotnet_diagnostic.CA1024.severity = suggestion
dotnet_diagnostic.CA1027.severity = suggestion
dotnet_diagnostic.CA1028.severity = warning
dotnet_diagnostic.CA1030.severity = none
dotnet_diagnostic.CA1031.severity = suggestion
dotnet_diagnostic.CA1032.severity = warning
dotnet_diagnostic.CA1033.severity = warning
dotnet_diagnostic.CA1034.severity = warning
dotnet_diagnostic.CA1036.severity = suggestion
dotnet_diagnostic.CA1040.severity = none
dotnet_diagnostic.CA1041.severity = error
dotnet_diagnostic.CA1043.severity = warning
dotnet_diagnostic.CA1044.severity = none
dotnet_diagnostic.CA1045.severity = warning
dotnet_diagnostic.CA1046.severity = warning
dotnet_diagnostic.CA1047.severity = none
dotnet_diagnostic.CA1050.severity = warning
dotnet_diagnostic.CA1051.severity = error
dotnet_diagnostic.CA1052.severity = warning
#dotnet_diagnostic.CA1053.severity = warning
dotnet_diagnostic.CA1054.severity = warning
dotnet_diagnostic.CA1055.severity = warning
dotnet_diagnostic.CA1056.severity = warning
dotnet_diagnostic.CA1058.severity = warning
dotnet_diagnostic.CA1060.severity = none
dotnet_diagnostic.CA1061.severity = warning
dotnet_diagnostic.CA1062.severity = none
dotnet_diagnostic.CA1063.severity = warning
dotnet_diagnostic.CA1064.severity = error
dotnet_diagnostic.CA1065.severity = error
dotnet_diagnostic.CA1066.severity = warning
dotnet_diagnostic.CA1067.severity = warning
dotnet_diagnostic.CA1068.severity = warning
dotnet_diagnostic.CA1069.severity = warning
dotnet_diagnostic.CA1070.severity = suggestion

# Microsoft.CodeAnalysis.NetAnalyzers | Documentation
dotnet_diagnostic.CA1200.severity = none

# Microsoft.CodeAnalysis.NetAnalyzers | Globalization
dotnet_diagnostic.CA1303.severity = warning
dotnet_diagnostic.CA1304.severity = warning
dotnet_diagnostic.CA1305.severity = warning
dotnet_diagnostic.CA1307.severity = warning
dotnet_diagnostic.CA1308.severity = suggestion
dotnet_diagnostic.CA1309.severity = warning
dotnet_diagnostic.CA1310.severity = warning
dotnet_diagnostic.CA2101.severity = suggestion

# Microsoft.CodeAnalysis.NetAnalyzers | Interoperability
dotnet_diagnostic.CA1401.severity = suggestion
dotnet_diagnostic.CA1416.severity = warning
dotnet_diagnostic.CA1417.severity = warning
dotnet_diagnostic.CA1418.severity = warning
dotnet_diagnostic.CA1419.severity = suggestion

# Microsoft.CodeAnalysis.NetAnalyzers | Maintainability
dotnet_diagnostic.CA1501.severity = warning
dotnet_diagnostic.CA1502.severity = warning
dotnet_diagnostic.CA1505.severity = warning
dotnet_diagnostic.CA1506.severity = warning
dotnet_diagnostic.CA1507.severity = warning
dotnet_diagnostic.CA1508.severity = warning
dotnet_diagnostic.CA1509.severity = error 

## Microsoft.CodeAnalysis.NetAnalyzers | Naming

# CA1700: Do not name enum values 'Reserved'
dotnet_diagnostic.CA1700.severity = suggestion

# CA1707: Identifiers should not contain underscores
dotnet_diagnostic.CA1707.severity = none

# CA1708: Identifiers should differ by more than case
dotnet_diagnostic.CA1708.severity = suggestion

# CA1710: Identifiers should have correct suffix
dotnet_diagnostic.CA1710.severity = warning

# CA1711: Identifiers should not have incorrect suffix
dotnet_diagnostic.CA1711.severity = warning

# CA1712: Do not prefix enum values with type name
dotnet_diagnostic.CA1712.severity = warning

# CA1713: Events should not have 'Before' or 'After' prefix
dotnet_diagnostic.CA1713.severity = warning

# CA1714: Flags enums should have plural names
dotnet_diagnostic.CA1714.severity = none

# CA1715: Identifiers should have correct prefix
dotnet_diagnostic.CA1715.severity = warning

# CA1716: Identifiers should not match keywords
dotnet_diagnostic.CA1716.severity = warning

# CA1717: Only FlagsAttribute enums should have plural names
dotnet_diagnostic.CA1717.severity = none

# CA1720: Identifier contains type name
dotnet_diagnostic.CA1720.severity = warning

# CA1721: Property names should not match get methods
dotnet_diagnostic.CA1721.severity = warning

# CA1724: Type names should not match namespaces
dotnet_diagnostic.CA1724.severity = suggestion

# CA1725: Parameter names should match base declaration
dotnet_diagnostic.CA1725.severity = suggestion

# CA1727: Use PascalCase for named placeholders
dotnet_diagnostic.CA1727.severity = warning

## Microsoft.CodeAnalysis.NetAnalyzers | Performance

# CA1802: Use literals where appropriate
dotnet_diagnostic.CA1802.severity = warning

# CA1805: Do not initialize unnecessarily
dotnet_diagnostic.CA1805.severity = warning

# CA1806: Do not ignore method results
dotnet_diagnostic.CA1806.severity = warning

# CA1810: Initialize reference type static fields inline
dotnet_diagnostic.CA1810.severity = suggestion

# CA1812: Avoid uninstantiated internal classes
dotnet_diagnostic.CA1812.severity = suggestion

# CA1813: Avoid unsealed attributes
dotnet_diagnostic.CA1813.severity = warning

# CA1814: Prefer jagged arrays over multidimensional
dotnet_diagnostic.CA1814.severity = suggestion

# CA1815: Override equals and operator equals on value types
dotnet_diagnostic.CA1815.severity = warning

# CA1819: Properties should not return arrays
dotnet_diagnostic.CA1819.severity = warning

# CA1820: Test for empty strings using string length
dotnet_diagnostic.CA1820.severity = warning

# CA1821: Remove empty Finalizers
dotnet_diagnostic.CA1821.severity = suggestion

# CA1822: Mark members as static
dotnet_diagnostic.CA1822.severity = suggestion

# CA1823: Avoid unused private fields
dotnet_diagnostic.CA1823.severity = warning

# CA1824: Mark assemblies with NeutralResourcesLanguageAttribute
dotnet_diagnostic.CA1824.severity = none

# CA1825: Avoid zero-length array allocations
dotnet_diagnostic.CA1825.severity = warning

# CA1826: Do not use Enumerable methods on indexable collections
dotnet_diagnostic.CA1826.severity = none

# CA1827: Do not use Count() or LongCount() when Any() can be used
dotnet_diagnostic.CA1827.severity = warning

# CA1828: Do not use CountAsync() or LongCountAsync() when AnyAsync() can be used
dotnet_diagnostic.CA1828.severity = warning

# CA1829: Use Length/Count property instead of Count() when available
dotnet_diagnostic.CA1829.severity = warning

# CA1830: Prefer strongly-typed Append and Insert method overloads on StringBuilder
dotnet_diagnostic.CA1830.severity = warning

# CA1831: Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.CA1831.severity = warning

# CA1832: Use AsSpan or AsMemory instead of Range-based indexers for getting ReadOnlySpan or ReadOnlyMemory portion of an array
dotnet_diagnostic.CA1832.severity = suggestion

# CA1833: Use AsSpan or AsMemory instead of Range-based indexers for getting Span or Memory portion of an array
dotnet_diagnostic.CA1833.severity = suggestion

# CA1834: Consider using 'StringBuilder.Append(char)' when applicable
dotnet_diagnostic.CA1834.severity = warning

# CA1835: Prefer the 'Memory'-based overloads for 'ReadAsync' and 'WriteAsync'
dotnet_diagnostic.CA1835.severity = suggestion

# CA1836: Prefer IsEmpty over Count
dotnet_diagnostic.CA1836.severity = warning

# CA1837: Use 'Environment.ProcessId'
dotnet_diagnostic.CA1837.severity = suggestion

# CA1838: Avoid 'StringBuilder' parameters for P/Invokes
dotnet_diagnostic.CA1838.severity = warning

# CA1839: Use 'Environment.ProcessPath'
dotnet_diagnostic.CA1839.severity = suggestion

# CA1840: Use 'Environment.CurrentManagedThreadId'
dotnet_diagnostic.CA1840.severity = suggestion

# CA1841: Prefer Dictionary.Contains methods
dotnet_diagnostic.CA1841.severity = warning

# CA1842: Do not use 'WhenAll' with a single task
dotnet_diagnostic.CA1842.severity = warning

# CA1843: Do not use 'WaitAll' with a single task
dotnet_diagnostic.CA1843.severity = warning

# CA1844: Provide memory-based overrides of async methods when subclassing 'Stream'
dotnet_diagnostic.CA1844.severity = warning

# CA1845: Use span-based 'string.Concat'
dotnet_diagnostic.CA1845.severity = warning

# CA1846: Prefer 'AsSpan' over 'Substring'
dotnet_diagnostic.CA1846.severity = warning

# CA1847: Use char literal for a single character lookup
dotnet_diagnostic.CA1847.severity = warning

# CA1848: Use the LoggerMessage delegates
dotnet_diagnostic.CA1848.severity = suggestion

# CA1849: Call async methods when in an async method
dotnet_diagnostic.CA1849.severity = warning

# CA1850: Prefer static HashData method over ComputeHash
dotnet_diagnostic.CA1850.severity = none

# CA1851: Possible multiple enumerations of IEnumerable collection
dotnet_diagnostic.CA1851.severity = none

## Microsoft.CodeAnalysis.NetAnalyzers | Reliability

# CA2000: Dispose objects before losing scope
dotnet_diagnostic.CA2000.severity = suggestion

# CA2002: Do not lock on objects with weak identity
dotnet_diagnostic.CA2002.severity = warning

# CA2007: Consider calling ConfigureAwait on the awaited task
dotnet_diagnostic.CA2007.severity = suggestion

# CA2008: Do not create tasks without passing a TaskScheduler
dotnet_diagnostic.CA2008.severity = none

# CA2009: Do not call ToImmutableCollection on an ImmutableCollection value
dotnet_diagnostic.CA2009.severity = suggestion

# CA2011: Avoid infinite recursion
dotnet_diagnostic.CA2011.severity = error

# CA2012: Use ValueTasks correctly
dotnet_diagnostic.CA2012.severity = suggestion

# CA2013: Do not use ReferenceEquals with value types
dotnet_diagnostic.CA2013.severity = warning

# CA2014: Do not use stackalloc in loops
dotnet_diagnostic.CA2014.severity = warning

# CA2015: Do not define finalizers for types derived from MemoryManager<T>
dotnet_diagnostic.CA2015.severity = warning

# CA2016: Forward the 'CancellationToken' parameter to methods
dotnet_diagnostic.CA2016.severity = warning

# CA2017: Parameter count mismatch
dotnet_diagnostic.CA2017.severity = warning

# CA2018: 'Buffer.BlockCopy' expects the number of bytes to be copied for the 'count' argument
dotnet_diagnostic.CA2018.severity = warning

## Microsoft.CodeAnalysis.NetAnalyzers | Security

# CA2100: Review SQL queries for security vulnerabilities
dotnet_diagnostic.CA2100.severity = warning 

# CA2109: Review visible event handlers
dotnet_diagnostic.CA2109.severity = warning 

# CA2119: Seal methods that satisfy private interfaces
dotnet_diagnostic.CA2119.severity = warning 

# CA2153: Do Not Catch Corrupted State Exceptions
dotnet_diagnostic.CA2153.severity = warning 

# CA2300: Do not use insecure deserializer BinaryFormatter
dotnet_diagnostic.CA2300.severity = warning 

# CA2301: Do not call BinaryFormatter.Deserialize without first setting BinaryFormatter.Binder
dotnet_diagnostic.CA2301.severity = none

# CA2302: Ensure BinaryFormatter.Binder is set before calling BinaryFormatter.Deserialize
dotnet_diagnostic.CA2302.severity = none

# CA2305: Do not use insecure deserializer LosFormatter
dotnet_diagnostic.CA2305.severity = warning 

# CA2310: Do not use insecure deserializer NetDataContractSerializer
dotnet_diagnostic.CA2310.severity = warning 

# CA2311: Do not deserialize without first setting NetDataContractSerializer.Binder
dotnet_diagnostic.CA2311.severity = none

# CA2312: Ensure NetDataContractSerializer.Binder is set before deserializing
dotnet_diagnostic.CA2312.severity = none

# CA2315: Do not use insecure deserializer ObjectStateFormatter
dotnet_diagnostic.CA2315.severity = warning 

# CA2321: Do not deserialize with JavaScriptSerializer using a SimpleTypeResolver
dotnet_diagnostic.CA2321.severity = warning 

# CA2322: Ensure JavaScriptSerializer is not initialized with SimpleTypeResolver before deserializing
dotnet_diagnostic.CA2322.severity = warning 

# CA2326: Do not use TypeNameHandling values other than None
dotnet_diagnostic.CA2326.severity = warning 

# CA2327: Do not use insecure JsonSerializerSettings
dotnet_diagnostic.CA2327.severity = warning 

# CA2328: Ensure that JsonSerializerSettings are secure
dotnet_diagnostic.CA2328.severity = warning 

# CA2329: Do not deserialize with JsonSerializer using an insecure configuration
dotnet_diagnostic.CA2329.severity = warning 

# CA2330: Ensure that JsonSerializer has a secure configuration when deserializing
dotnet_diagnostic.CA2330.severity = warning 

# CA2350: Do not use DataTable.ReadXml() with untrusted data
dotnet_diagnostic.CA2350.severity = warning 

# CA2351: Do not use DataSet.ReadXml() with untrusted data
dotnet_diagnostic.CA2351.severity = warning 

# CA2352: Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks
dotnet_diagnostic.CA2352.severity = warning 

# CA2353: Unsafe DataSet or DataTable in serializable type
dotnet_diagnostic.CA2353.severity = warning 

# CA2354: Unsafe DataSet or DataTable in deserialized object graph can be vulnerable to remote code execution attacks
dotnet_diagnostic.CA2354.severity = warning 

# CA2355: Unsafe DataSet or DataTable type found in deserializable object graph
dotnet_diagnostic.CA2355.severity = warning 

# CA2356: Unsafe DataSet or DataTable type in web deserializable object graph
dotnet_diagnostic.CA2356.severity = warning 

# CA2361: Ensure auto-generated class containing DataSet.ReadXml() is not used with untrusted data
dotnet_diagnostic.CA2361.severity = warning 

# CA2362: Unsafe DataSet or DataTable in auto-generated serializable type can be vulnerable to remote code execution attacks
dotnet_diagnostic.CA2362.severity = warning 

# CA3001: Review code for SQL injection vulnerabilities
dotnet_diagnostic.CA3001.severity = warning 

# CA3002: Review code for XSS vulnerabilities
dotnet_diagnostic.CA3002.severity = warning 

# CA3003: Review code for file path injection vulnerabilities
dotnet_diagnostic.CA3003.severity = warning 

# CA3004: Review code for information disclosure vulnerabilities
dotnet_diagnostic.CA3004.severity = warning 

# CA3005: Review code for LDAP injection vulnerabilities
dotnet_diagnostic.CA3005.severity = warning 

# CA3006: Review code for process command injection vulnerabilities
dotnet_diagnostic.CA3006.severity = warning 

# CA3007: Review code for open redirect vulnerabilities
dotnet_diagnostic.CA3007.severity = warning 

# CA3008: Review code for XPath injection vulnerabilities
dotnet_diagnostic.CA3008.severity = warning 

# CA3009: Review code for XML injection vulnerabilities
dotnet_diagnostic.CA3009.severity = warning 

# CA3010: Review code for XAML injection vulnerabilities
dotnet_diagnostic.CA3010.severity = warning 

# CA3011: Review code for DLL injection vulnerabilities
dotnet_diagnostic.CA3011.severity = warning 

# CA3012: Review code for regex injection vulnerabilities
dotnet_diagnostic.CA3012.severity = warning 

# CA3061: Do Not Add Schema By URL
dotnet_diagnostic.CA3061.severity = warning

# CA3075: Insecure DTD processing in XML
dotnet_diagnostic.CA3075.severity = warning

# CA3076: Insecure XSLT script processing.
dotnet_diagnostic.CA3076.severity = warning

# CA3077: Insecure Processing in API Design, XmlDocument and XmlTextReader
dotnet_diagnostic.CA3077.severity = warning

# CA3147: Mark Verb Handlers With Validate Antiforgery Token
dotnet_diagnostic.CA3147.severity = warning

# CA5350: Do Not Use Weak Cryptographic Algorithms
dotnet_diagnostic.CA5350.severity = warning

# CA5351: Do Not Use Broken Cryptographic Algorithms
dotnet_diagnostic.CA5351.severity = warning

# CA5358: Review cipher mode usage with cryptography experts
dotnet_diagnostic.CA5358.severity = warning 

# CA5359: Do Not Disable Certificate Validation
dotnet_diagnostic.CA5359.severity = warning

# CA5360: Do Not Call Dangerous Methods In Deserialization
dotnet_diagnostic.CA5360.severity = warning

# CA5361: Do Not Disable SChannel Use of Strong Crypto
dotnet_diagnostic.CA5361.severity = warning 

# CA5362: Potential reference cycle in deserialized object graph
dotnet_diagnostic.CA5362.severity = suggestion 

# CA5363: Do Not Disable Request Validation
dotnet_diagnostic.CA5363.severity = suggestion

# CA5364: Do Not Use Deprecated Security Protocols
dotnet_diagnostic.CA5364.severity = warning

# CA5365: Do Not Disable HTTP Header Checking
dotnet_diagnostic.CA5365.severity = warning

# CA5366: Use XmlReader for 'DataSet.ReadXml()'
dotnet_diagnostic.CA5366.severity = warning

# CA5367: Do Not Serialize Types With Pointer Fields
dotnet_diagnostic.CA5367.severity = error 

# CA5368: Set ViewStateUserKey For Classes Derived From Page
dotnet_diagnostic.CA5368.severity = warning

# CA5369: Use XmlReader for 'XmlSerializer.Deserialize()'
dotnet_diagnostic.CA5369.severity = warning

# CA5370: Use XmlReader for XmlValidatingReader constructor
dotnet_diagnostic.CA5370.severity = warning

# CA5371: Use XmlReader for 'XmlSchema.Read()'
dotnet_diagnostic.CA5371.severity = warning

# CA5372: Use XmlReader for XPathDocument constructor
dotnet_diagnostic.CA5372.severity = warning

# CA5373: Do not use obsolete key derivation function
dotnet_diagnostic.CA5373.severity = warning

# CA5374: Do Not Use XslTransform
dotnet_diagnostic.CA5374.severity = warning

# CA5375: Do Not Use Account Shared Access Signature
dotnet_diagnostic.CA5375.severity = warning 

# CA5376: Use SharedAccessProtocol HttpsOnly
dotnet_diagnostic.CA5376.severity = warning 

# CA5377: Use Container Level Access Policy
dotnet_diagnostic.CA5377.severity = warning 

# CA5378: Do not disable ServicePointManagerSecurityProtocols
dotnet_diagnostic.CA5378.severity = warning 

# CA5379: Ensure Key Derivation Function algorithm is sufficiently strong
dotnet_diagnostic.CA5379.severity = warning

# CA5380: Do Not Add Certificates To Root Store
dotnet_diagnostic.CA5380.severity = warning 

# CA5381: Ensure Certificates Are Not Added To Root Store
dotnet_diagnostic.CA5381.severity = warning 

# CA5382: Use Secure Cookies In ASP.NET Core
dotnet_diagnostic.CA5382.severity = warning 

# CA5383: Ensure Use Secure Cookies In ASP.NET Core
dotnet_diagnostic.CA5383.severity = warning 

# CA5384: Do Not Use Digital Signature Algorithm (DSA)
dotnet_diagnostic.CA5384.severity = warning

# CA5385: Use Rivest–Shamir–Adleman (RSA) Algorithm With Sufficient Key Size
dotnet_diagnostic.CA5385.severity = warning

# CA5386: Avoid hardcoding SecurityProtocolType value
dotnet_diagnostic.CA5386.severity = warning 

# CA5387: Do Not Use Weak Key Derivation Function With Insufficient Iteration Count
dotnet_diagnostic.CA5387.severity = warning 

# CA5388: Ensure Sufficient Iteration Count When Using Weak Key Derivation Function
dotnet_diagnostic.CA5388.severity = warning 

# CA5389: Do Not Add Archive Item's Path To The Target File System Path
dotnet_diagnostic.CA5389.severity = warning 

# CA5390: Do not hard-code encryption key
dotnet_diagnostic.CA5390.severity = warning 

# CA5391: Use antiforgery tokens in ASP.NET Core MVC controllers
dotnet_diagnostic.CA5391.severity = warning 

# CA5392: Use DefaultDllImportSearchPaths attribute for P/Invokes
dotnet_diagnostic.CA5392.severity = warning 

# CA5393: Do not use unsafe DllImportSearchPath value
dotnet_diagnostic.CA5393.severity = warning 

# CA5394: Do not use insecure randomness
dotnet_diagnostic.CA5394.severity = warning 

# CA5395: Miss HttpVerb attribute for action methods
dotnet_diagnostic.CA5395.severity = warning 

# CA5396: Set HttpOnly to true for HttpCookie
dotnet_diagnostic.CA5396.severity = warning 

# CA5397: Do not use deprecated SslProtocols values
dotnet_diagnostic.CA5397.severity = warning

# CA5398: Avoid hardcoded SslProtocols values
dotnet_diagnostic.CA5398.severity = warning 

# CA5399: HttpClients should enable certificate revocation list checks
dotnet_diagnostic.CA5399.severity = warning 

# CA5400: Ensure HttpClient certificate revocation list check is not disabled
dotnet_diagnostic.CA5400.severity = warning 

# CA5401: Do not use CreateEncryptor with non-default IV
dotnet_diagnostic.CA5401.severity = warning 

# CA5402: Use CreateEncryptor with the default IV 
dotnet_diagnostic.CA5402.severity = warning 

# CA5403: Do not hard-code certificate
dotnet_diagnostic.CA5403.severity = warning 

# CA5404: Do not disable token validation checks
dotnet_diagnostic.CA5404.severity = warning 

# CA5405: Do not always skip token validation in delegates
dotnet_diagnostic.CA5405.severity = warning 

## Microsoft.CodeAnalysis.NetAnalyzers | Usage

# CA1816: Dispose methods should call SuppressFinalize
dotnet_diagnostic.CA1816.severity = suggestion 

# CA2200: Rethrow to preserve stack details
dotnet_diagnostic.CA2200.severity = warning

# CA2201: Do not raise reserved exception types
dotnet_diagnostic.CA2201.severity = warning

# CA2207: Initialize value type static fields inline
dotnet_diagnostic.CA2207.severity = warning 

# CA2208: Instantiate argument exceptions correctly
dotnet_diagnostic.CA2208.severity = warning

# CA2211: Non-constant fields should not be visible
dotnet_diagnostic.CA2211.severity = warning

# CA2213: Disposable fields should be disposed
dotnet_diagnostic.CA2213.severity = warning 

# CA2214: Do not call overridable methods in constructors
dotnet_diagnostic.CA2214.severity = warning 

# CA2215: Dispose methods should call base class dispose
dotnet_diagnostic.CA2215.severity = warning

# CA2216: Disposable types should declare finalizer
dotnet_diagnostic.CA2216.severity = warning 

# CA2217: Do not mark enums with FlagsAttribute
dotnet_diagnostic.CA2217.severity = warning 

# CA2218: Override GetHashCode on overriding Equals
dotnet_diagnostic.CA2218.severity = none

# CA2219: Do not raise exceptions in finally clauses
dotnet_diagnostic.CA2219.severity = error

# CA2224: Override Equals on overloading operator equals
dotnet_diagnostic.CA2224.severity = none

# CA2225: Operator overloads have named alternates
dotnet_diagnostic.CA2225.severity = none

# CA2226: Operators should have symmetrical overloads
dotnet_diagnostic.CA2226.severity = none

# CA2227: Collection properties should be read only
dotnet_diagnostic.CA2227.severity = warning

# CA2229: Implement serialization constructors
dotnet_diagnostic.CA2229.severity = none

# CA2231: Overload operator equals on overriding value type Equals
dotnet_diagnostic.CA2231.severity = warning

# CA2234: Pass system uri objects instead of strings
dotnet_diagnostic.CA2234.severity = warning 

# CA2235: Mark all non-serializable fields
dotnet_diagnostic.CA2235.severity = warning 

# CA2237: Mark ISerializable types with serializable
dotnet_diagnostic.CA2237.severity = warning 

# CA2241: Provide correct arguments to formatting methods
dotnet_diagnostic.CA2241.severity = error

# CA2242: Test for NaN correctly
dotnet_diagnostic.CA2242.severity = error

# CA2243: Attribute string literals should parse correctly
dotnet_diagnostic.CA2243.severity = error 

# CA2244: Do not duplicate indexed element initializations
dotnet_diagnostic.CA2244.severity = error

# CA2245: Do not assign a property to itself
dotnet_diagnostic.CA2245.severity = error

# CA2246: Assigning symbol and its member in the same statement
dotnet_diagnostic.CA2246.severity = error

# CA2247: Argument passed to TaskCompletionSource constructor should be TaskCreationOptions enum instead of TaskContinuationOptions enum
dotnet_diagnostic.CA2247.severity = warning

# CA2248: Provide correct 'enum' argument to 'Enum.HasFlag'
dotnet_diagnostic.CA2248.severity = error

# CA2249: Consider using 'string.Contains' instead of 'string.IndexOf'
dotnet_diagnostic.CA2249.severity = warning

# CA2250: Use 'ThrowIfCancellationRequested'
dotnet_diagnostic.CA2250.severity = warning

# CA2251: Use 'string.Equals'
dotnet_diagnostic.CA2251.severity = warning

# CA2252: This API requires opting into preview features
dotnet_diagnostic.CA2252.severity = error

# CA2253: Named placeholders should not be numeric values
dotnet_diagnostic.CA2253.severity = warning

# CA2254: Template should be a static expression
dotnet_diagnostic.CA2254.severity = warning

# CA2255: The 'ModuleInitializer' attribute should not be used in libraries
dotnet_diagnostic.CA2255.severity = warning

# CA2256: All members declared in parent interfaces must have an implementation in a DynamicInterfaceCastableImplementation-attributed interface
dotnet_diagnostic.CA2256.severity = warning

# CA2257: Members defined on an interface with the 'DynamicInterfaceCastableImplementationAttribute' should be 'static'
dotnet_diagnostic.CA2257.severity = warning

# CA2258: Providing a 'DynamicInterfaceCastableImplementation' interface in Visual Basic is unsupported
dotnet_diagnostic.CA2258.severity = warning
